tosca_definitions_version: alien_dsl_1_2_0
metadata:
  description: Alien4Cloud generated service template
  template_name: ReferenceApp
  template_version: 0.1.0
  template_author: admin

imports:
  - git://profile-types/types/node_appcontainer/appcontainer.yaml@https://gitscm.cisco.com/scm/ccdev/profile-types.git
  - git://profile-types/types/node_container_service/container-service.yaml@https://gitscm.cisco.com/scm/ccdev/profile-types.git
  - git://profile-types/types/node_container_route/container-route.yaml@https://gitscm.cisco.com/scm/ccdev/profile-types.git
  - git://profile-types/types/node_storage/storage.yaml@https://gitscm.cisco.com/scm/ccdev/profile-types.git


dsl_definitions:
  mongo_tag: &mongo_tag latest

topology_template:
  inputs:
    hostname:
      type: string
      required: true
      description: Resolved domain name
    name_space:
      type: string
      required: true
      description: project name
    avail_zone:
      description: DC Region
      type: string
      required: true
    uname:
      type: string
      required: true
      description: username for OpenShift
    pword:
      type: SecureToken
      required: true
      description: password for OpenShift
    oshift_url:
      type: string
      required: false
      description: openshift url is used when openshift_config is set. Example, 192.168.99.100:8443

  node_templates:
    mongo-storage:
      type: cisco.nodes.Storage.BlockStorage
      properties:
        size: 100
        auto_allocate: false

    mongo-ctnr:
      type: cisco.nodes.ScalableContainer
      properties:
        openshift_config: { get_input: oshift_url}
        username: { get_input: uname }
        namespace: { get_input: name_space }
        password: { get_input: pword }
        image_name: delopes/mongo
        image_tag: *mongo_tag
        avail_zone: { get_input: avail_zone }
        replicas: 1
        ports:
          -
            name: db
            port: 27017
            protocol: tcp
        volumes:
          -
            name: mongodb
            volume: mongo-storage
            mount_path: /data/db
        environment:
          CISCO_LC: dev
          SERVICE: http://svc-mongo-ctnr
      requirements:
        - dependency: mongo-storage

    svc-mongo-ctnr:
      type: cisco.nodes.ContainerService
      properties:
        username: { get_input: uname }
        namespace: { get_input: name_space }
        openshift_config: { get_input: oshift_url}
        password: { get_input: pword }
        ports:
          -
            name: db
            port: 27027
            protocol: tcp
        avail_zone: { get_input: avail_zone }
        name: mongo-ctnr
      requirements:
        - container: mongo-ctnr

    route-mongo-ctnr:
      type: cisco.nodes.ContainerRoute
      properties:
        username: { get_input: uname }
        namespace: { get_input: name_space }
        password: { get_input: pword }
        openshift_config: { get_input: oshift_url}
        hostname: { get_input: hostname }
        container_route_target_port: db
        target_container_service: svc-mongo-ctnr
        avail_zone: { get_input: avail_zone }
      requirements:
        - dependency: svc-mongo-ctnr
